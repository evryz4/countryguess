import os
import random

from aiogram import Bot, Router, F
from aiogram.types import Message, FSInputFile
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.client.default import DefaultBotProperties
from aiogram.enums.parse_mode import ParseMode

from keyboards import mode, generate_keyboard
from countries import reversed_countries
from states import Flags, Sights, All
from config import TOKEN

bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
router = Router()

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

FLAGS_DIR = os.path.join(BASE_DIR, 'flags')
SIGHTS_DIR = os.path.join(BASE_DIR, 'sights')

@router.message(Command('start'))
async def on_start(msg: Message):
    await msg.answer(f'–ü—Ä–∏–≤–µ—Ç, {msg.from_user.full_name}\n–≠—Ç–æ –±–æ—Ç –¥–ª—è –æ—Ç–≥–∞–¥—ã–≤–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω.\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º:',
                     reply_markup=mode)

@router.message(F.text == 'üè≥ –ü–æ —Ñ–ª–∞–≥–∞–º')
async def on_flags(msg: Message, state: FSMContext):
    keyboard, correct = await generate_keyboard(state)

    photo = FSInputFile(f'{FLAGS_DIR}\\{reversed_countries[correct]}.png')
    await bot.send_photo(msg.from_user.id, photo, caption='–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É:\n\n–†–µ–∂–∏–º: üè≥ –§–ª–∞–≥–∏\n–ß—Ç–æ–±—ã –∑–∞–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä—É –Ω–∞–ø–∏—à–∏—Ç–µ /start', reply_markup=keyboard)

    await state.set_state(eval(f'Flags.{reversed_countries[correct]}'))

@router.message(F.text == 'üïå –ü–æ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—è–º')
async def on_sights(msg: Message, state: FSMContext):
    keyboard, correct = await generate_keyboard(state)

    photo = FSInputFile(f'{SIGHTS_DIR}\\{reversed_countries[correct]}.jpg')
    await bot.send_photo(msg.from_user.id, photo, caption='–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É:\n\n–†–µ–∂–∏–º: üïå –î–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏\n–ß—Ç–æ–±—ã –∑–∞–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä—É –Ω–∞–ø–∏—à–∏—Ç–µ /start', reply_markup=keyboard)

    await state.set_state(eval(f'Sights.{reversed_countries[correct]}'))

@router.message(F.text == '‚úñÔ∏è –°–º–µ—à–∞–Ω–Ω—ã–π')
async def on_sights(msg: Message, state: FSMContext):
    keyboard, correct = await generate_keyboard(state)

    if random.randint(1, 2) == 1:
        photo = FSInputFile(f'{FLAGS_DIR}\\{reversed_countries[correct]}.png')
    else:
        photo = FSInputFile(f'{SIGHTS_DIR}\\{reversed_countries[correct]}.jpg')

    await bot.send_photo(msg.from_user.id, photo, caption='–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É:\n\n–†–µ–∂–∏–º: ‚úñÔ∏è –°–º–µ—à–∞–Ω–Ω—ã–π\n–ß—Ç–æ–±—ã –∑–∞–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä—É –Ω–∞–ø–∏—à–∏—Ç–µ /start', reply_markup=keyboard)

    await state.set_state(eval(f'All.{reversed_countries[correct]}'))

@router.message()
async def on_country(msg: Message, state: FSMContext):
    mode, correct = (await state.get_state()).split(':')

    if reversed_countries[msg.text] == correct:
        await msg.answer('‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!')
    else:
        await msg.answer('‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!')
    
    if mode == 'Flags':
        await on_flags(msg, state)
    elif mode == 'Sights':
        await on_sights(msg, state)
    elif mode == 'All':
        await on_sights(msg, state)